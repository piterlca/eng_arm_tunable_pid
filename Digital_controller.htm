<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Digital_controller.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Digital_controller.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Fri Nov 11 14:10:37 2016
<BR><P>
<H3>Maximum Stack Usage =        180 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Uart1Init &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[0]">Reset_Handler</a>
 <LI><a href="#[1]">Undef_Handler</a>
 <LI><a href="#[2]">SWI_Handler</a>
 <LI><a href="#[3]">PAbt_Handler</a>
 <LI><a href="#[4]">DAbt_Handler</a>
 <LI><a href="#[5]">IRQ_Handler</a>
 <LI><a href="#[6]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">Undef_Handler</a><BR>
 <LI><a href="#[2]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">SWI_Handler</a><BR>
 <LI><a href="#[3]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">PAbt_Handler</a><BR>
 <LI><a href="#[4]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">DAbt_Handler</a><BR>
 <LI><a href="#[5]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">IRQ_Handler</a><BR>
 <LI><a href="#[6]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">FIQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">DAbt_Handler</a> from lpc2300.o(RESET) referenced from lpc2300.o(RESET)
 <LI><a href="#[6]">FIQ_Handler</a> from lpc2300.o(RESET) referenced from lpc2300.o(RESET)
 <LI><a href="#[5]">IRQ_Handler</a> from lpc2300.o(RESET) referenced from lpc2300.o(RESET)
 <LI><a href="#[a]">Inter_Uart</a> from uart1.o(.text) referenced from uart1.o(.text)
 <LI><a href="#[3]">PAbt_Handler</a> from lpc2300.o(RESET) referenced from lpc2300.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from lpc2300.o(RESET) referenced from lpc2300.o(RESET)
 <LI><a href="#[2]">SWI_Handler</a> from lpc2300.o(RESET) referenced from lpc2300.o(RESET)
 <LI><a href="#[1]">Undef_Handler</a> from lpc2300.o(RESET) referenced from lpc2300.o(RESET)
 <LI><a href="#[b]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from lpc2300.o(RESET)
 <LI><a href="#[8]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[9]">pid_irq</a> from main.o(.text) referenced from main.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lpc2300.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> lpc2300.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>__main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))

<P><STRONG><a name="[50]"></a>_main_stk</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[c]"></a>_main_scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload (via Veneer)
</UL>

<P><STRONG><a name="[4f]"></a>__main_after_scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload (via Veneer)
</UL>

<P><STRONG><a name="[51]"></a>_main_clock</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[52]"></a>_main_cpp_init</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[53]"></a>_main_init</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[54]"></a>__rt_final_cpp</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[55]"></a>__rt_final_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[e]"></a>ADCSPI</STRONG> (ARM, 108 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADCSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP0Receive
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayCclk
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_irq
</UL>

<P><STRONG><a name="[11]"></a>DACSPI</STRONG> (ARM, 96 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DACSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1Send
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_irq
</UL>

<P><STRONG><a name="[9]"></a>pid_irq</STRONG> (ARM, 832 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pid_irq &rArr; DACSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand (via Veneer)
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACSPI
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSPI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[8]"></a>main</STRONG> (ARM, 1072 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = main &rArr; Uart1Init &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_VIC
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1Init
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Init
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Start
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataFree
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1Init
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP0Init
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFree
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PllInit
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Init
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSendDataFree
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitReadDataFree
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[17]"></a>SSP0Init</STRONG> (ARM, 160 bytes, Stack size 0 bytes, ssp0_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>SSP0Send</STRONG> (ARM, 64 bytes, Stack size 0 bytes, ssp0_spi.o(.text), UNUSED)

<P><STRONG><a name="[10]"></a>SSP0Receive</STRONG> (ARM, 60 bytes, Stack size 0 bytes, ssp0_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSPI
</UL>

<P><STRONG><a name="[57]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, irq.o(.text), UNUSED)

<P><STRONG><a name="[18]"></a>init_VIC</STRONG> (ARM, 84 bytes, Stack size 0 bytes, irq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>install_irq</STRONG> (ARM, 92 bytes, Stack size 8 bytes, irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = install_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1Init
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
</UL>

<P><STRONG><a name="[19]"></a>Timer1Init</STRONG> (ARM, 84 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b]"></a>Timer0Init</STRONG> (ARM, 160 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Timer0Init &rArr; install_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c]"></a>Timer0Start</STRONG> (ARM, 16 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>Timer0Restart</STRONG> (ARM, 48 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>Timer0Stop</STRONG> (ARM, 16 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[f]"></a>DelayCclk</STRONG> (ARM, 72 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSPI
</UL>

<P><STRONG><a name="[5a]"></a>DelayUs</STRONG> (ARM, 72 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>DelayMs</STRONG> (ARM, 72 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>StoperUsStart</STRONG> (ARM, 48 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>StoperUsStop</STRONG> (ARM, 24 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[16]"></a>SSP1Init</STRONG> (ARM, 160 bytes, Stack size 0 bytes, ssp1_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12]"></a>SSP1Send</STRONG> (ARM, 60 bytes, Stack size 0 bytes, ssp1_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACSPI
</UL>

<P><STRONG><a name="[5e]"></a>SSP1Receive</STRONG> (ARM, 60 bytes, Stack size 0 bytes, ssp1_spi.o(.text), UNUSED)

<P><STRONG><a name="[15]"></a>PllInit</STRONG> (ARM, 348 bytes, Stack size 0 bytes, pll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>PID_Init</STRONG> (ARM, 24 bytes, Stack size 0 bytes, pid.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14]"></a>PID</STRONG> (ARM, 332 bytes, Stack size 4 bytes, pid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PID
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_irq
</UL>

<P><STRONG><a name="[5f]"></a>ReadBufferOut</STRONG> (ARM, 68 bytes, Stack size 0 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>WriteBufferOut</STRONG> (ARM, 68 bytes, Stack size 0 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>WriteBufferNOut</STRONG> (ARM, 308 bytes, Stack size 16 bytes, buffer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PID
</UL>

<P><STRONG><a name="[61]"></a>ByteInBufferOut</STRONG> (ARM, 28 bytes, Stack size 0 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>ReadBufferIn</STRONG> (ARM, 68 bytes, Stack size 0 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>WriteBufferIn</STRONG> (ARM, 68 bytes, Stack size 0 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>ByteInBufferIn</STRONG> (ARM, 28 bytes, Stack size 0 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>UART_PID</STRONG> (ARM, 688 bytes, Stack size 8 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBufferNOut
</UL>

<P><STRONG><a name="[38]"></a>SendChar</STRONG> (ARM, 36 bytes, Stack size 0 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSDWord
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDWord
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSWord
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendWord
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSByte
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByte
</UL>

<P><STRONG><a name="[65]"></a>SendStrByte</STRONG> (ARM, 108 bytes, Stack size 0 bytes, uart1.o(.text), UNUSED)

<P><STRONG><a name="[a]"></a>Inter_Uart</STRONG> (ARM, 260 bytes, Stack size 64 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Inter_Uart &rArr; read_sbuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sbuffer
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_sbuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart1.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>countFDR</STRONG> (ARM, 152 bytes, Stack size 40 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = countFDR &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1Init
</UL>

<P><STRONG><a name="[1a]"></a>Uart1Init</STRONG> (ARM, 704 bytes, Stack size 64 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Uart1Init &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_sbuffer
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f (via Veneer)
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via Veneer)
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv (via Veneer)
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via Veneer)
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz (via Veneer)
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple (via Veneer)
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;countFDR
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>SendByte</STRONG> (ARM, 100 bytes, Stack size 16 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSByte
</UL>

<P><STRONG><a name="[39]"></a>SendSByte</STRONG> (ARM, 64 bytes, Stack size 8 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByte
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[3a]"></a>SendWord</STRONG> (ARM, 104 bytes, Stack size 16 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSWord
</UL>

<P><STRONG><a name="[3b]"></a>SendSWord</STRONG> (ARM, 68 bytes, Stack size 8 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendWord
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[3c]"></a>SendDWord</STRONG> (ARM, 136 bytes, Stack size 24 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod (via Veneer)
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSDWord
</UL>

<P><STRONG><a name="[3e]"></a>SendSDWord</STRONG> (ARM, 56 bytes, Stack size 8 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDWord
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[3f]"></a>SendData</STRONG> (ARM, 192 bytes, Stack size 24 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_sbuffer
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sbuffer
</UL>

<P><STRONG><a name="[21]"></a>InitSendDataFree</STRONG> (ARM, 20 bytes, Stack size 0 bytes, uart1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22]"></a>SendDataFree</STRONG> (ARM, 304 bytes, Stack size 24 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SendDataFree &rArr; write_sbuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_sbuffer
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbuffer_len
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sbuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>ReadData</STRONG> (ARM, 64 bytes, Stack size 16 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sbuffer
</UL>

<P><STRONG><a name="[1d]"></a>InitReadDataFree</STRONG> (ARM, 20 bytes, Stack size 0 bytes, uart1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>ReadDataFree</STRONG> (ARM, 112 bytes, Stack size 8 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ReadDataFree &rArr; read_sbuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sbuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d]"></a>create_sbuffer</STRONG> (ARM, 60 bytes, Stack size 24 bytes, sbuffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = create_sbuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1Init
</UL>

<P><STRONG><a name="[27]"></a>put_sbuffer</STRONG> (ARM, 80 bytes, Stack size 0 bytes, sbuffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inter_Uart
</UL>

<P><STRONG><a name="[41]"></a>get_sbuffer</STRONG> (ARM, 72 bytes, Stack size 0 bytes, sbuffer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
</UL>

<P><STRONG><a name="[42]"></a>sbuffer_len</STRONG> (ARM, 28 bytes, Stack size 0 bytes, sbuffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_sbuffer
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sbuffer
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataFree
</UL>

<P><STRONG><a name="[40]"></a>write_sbuffer</STRONG> (ARM, 124 bytes, Stack size 20 bytes, sbuffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = write_sbuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbuffer_len
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataFree
</UL>

<P><STRONG><a name="[28]"></a>read_sbuffer</STRONG> (ARM, 120 bytes, Stack size 20 bytes, sbuffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = read_sbuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbuffer_len
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inter_Uart
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataFree
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDataFree
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendWord (via Veneer)
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;countFDR (via Veneer)
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1Init (via Veneer)
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>__aeabi_idivmod</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByte (via Veneer)
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_uldivmod</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDWord (via Veneer)
</UL>

<P><STRONG><a name="[13]"></a>rand</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_irq (via Veneer)
</UL>

<P><STRONG><a name="[68]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[1f]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>__aeabi_fmul</STRONG> (Thumb, 126 bytes, Stack size 12 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;countFDR (via Veneer)
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1Init (via Veneer)
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_fdiv</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1Init (via Veneer)
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_dadd</STRONG> (Thumb, 332 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1Init (via Veneer)
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[4b]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_ddiv</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1Init (via Veneer)
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_ui2f</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1Init (via Veneer)
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1Init (via Veneer)
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;countFDR (via Veneer)
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_d2uiz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1Init (via Veneer)
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1Init (via Veneer)
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1Init (via Veneer)
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_llsl</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[6b]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__aeabi_llsr</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>

<P><STRONG><a name="[6c]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>__aeabi_lasr</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[6d]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>__I$use$fp</STRONG> (ARM, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[4c]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[49]"></a>_double_round</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[48]"></a>_double_epilogue</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[d]"></a>__scatterload</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r3
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload (via Veneer)
</UL>

<P><STRONG><a name="[6f]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>SendRawChar</STRONG> (ARM, 12 bytes, Stack size 0 bytes, buffer.o(i.SendRawChar), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBufferNOut
</UL>

<P><STRONG><a name="[4d]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[4e]"></a>__ARM_common_call_via_r3</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init.o(i.__ARM_common_call_via_r3))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[70]"></a>__scatterload_copy</STRONG> (ARM, 28 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[71]"></a>__scatterload_null</STRONG> (ARM, 4 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[72]"></a>__scatterload_zeroinit</STRONG> (ARM, 24 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2300.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2300.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2300.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2300.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2300.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2300.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2300.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2300.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2300.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2300.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2300.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2300.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
