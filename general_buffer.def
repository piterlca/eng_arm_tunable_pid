
typedef struct _BUFFER_NAME {
 	volatile BUFFER_TYPE data[BUFFER_SIZE];
	volatile unsigned int wpos;
	volatile unsigned int rpos;
	} BUFFER_NAME;


int isfull(BUFFER_NAME* b){
	return ((b->wpos+1)& (BUFFER_SIZE-1))==b->rpos;
 }
int isempty(BUFFER_NAME* b){
	return b->wpos==b->rpos;
}
int put(BUFFER_NAME* b, BUFFER_TYPE data){
	if(isfull(b)) return 1;
	b->data[b->wpos]=data;
	b->wpos=(b->wpos+1)&(BUFFER_SIZE-1);
	return 0;
}
int get(BUFFER_NAME* b, BUFFER_TYPE* data){
	if(isempty(b)) return 1;
	*data=b->data[b->rpos];
	b->rpos=(b->rpos+1)&(BUFFER_SIZE-1);
	return 0;
}